{"version":3,"file":"google-map-directions.js","sourceRoot":"","sources":["../../../src/directives/google-map-directions.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by mjaric on 9/30/16.\r\n */\r\nimport {Directive, Input, Output, OnInit, OnDestroy, EventEmitter, forwardRef} from '@angular/core';\r\nimport {MapsManager} from '../services/maps-manager';\r\nimport {BaseGoogleMapComponent} from './base-google-map-component';\r\n\r\n\r\n@Directive({\r\n    selector: 'google-map-directions',\r\n    providers: [{provide: BaseGoogleMapComponent, useExisting: forwardRef(() => GoogleMapDirectionsDirective)}]\r\n})\r\nexport class GoogleMapDirectionsDirective extends BaseGoogleMapComponent<google.maps.DirectionsRenderer> implements OnInit, OnDestroy {\r\n\r\n    private _routeColor: string = '#ff9702';\r\n\r\n\r\n    private _origin: any;\r\n    private _destination: any;\r\n\r\n    /**\r\n     * Origin of directions\r\n     * @param value can be google.maps.LatLngLiteral or Coordinates  or {latitude: number, longitude: number}\r\n     */\r\n    @Input()\r\n    set origin(value: google.maps.LatLngLiteral | Coordinates | { latitude: number, longitude: number }) {\r\n        if (this._origin !== value) {\r\n            this._origin = value;\r\n            if (this._destination) {\r\n                this._mapsManager\r\n                    .getDirections(this._origin, this._destination)\r\n                    .then(directions => {\r\n                        this.proxy\r\n                            .then(renderer => {\r\n                                renderer.setDirections(directions);\r\n                            });\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destination of directions\r\n     * @param value can be google.maps.LatLngLiteral or Coordinates  or {latitude: number, longitude: number}\r\n     */\r\n    @Input()\r\n    set destination(value: google.maps.LatLngLiteral | Coordinates | { latitude: number, longitude: number }) {\r\n        if (this._destination !== value) {\r\n            this._destination = value;\r\n            if (this._origin) {\r\n                this._mapsManager\r\n                    .getDirections(this._origin, this._destination)\r\n                    .then(directions => {\r\n                        this.proxy\r\n                            .then(renderer => {\r\n                                renderer.setDirections(directions);\r\n                            });\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the color of rendered polygonal line as route in map view\r\n     * @param value is as string e.g. '#ff9702'. Default value is '#ff9702'\r\n     */\r\n    @Input()\r\n    set routeColor(value: string) {\r\n        this._routeColor = value || '#ff9702';\r\n        this.proxy.then(directions => {\r\n            directions.setOptions(this.getOptions());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This event is fired when the directions route changes.\r\n     */\r\n    @Output()\r\n    directions_changed: EventEmitter<void> = new EventEmitter<void>();\r\n    /**\r\n     * By default, the input map is centered and zoomed to the bounding box of this set of directions.\r\n     * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom were never set.\r\n     * @type {boolean}\r\n     */\r\n    @Input()\r\n    public preserveViewport: boolean = true;\r\n\r\n    constructor(private _mapsManager: MapsManager) {\r\n        super();\r\n    }\r\n\r\n    /*\r\n     * Internal logic\r\n     * **********************************************************\r\n     */\r\n\r\n\r\n    ngOnInit(): void {\r\n        this._mapsManager\r\n            .createDirections()\r\n            .then(directionsRenderer => {\r\n                this.bindEvents(directionsRenderer);\r\n                this.proxyResolver(directionsRenderer);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.proxy.then(directions => {\r\n            google.maps.event.clearInstanceListeners(directions);\r\n            directions.setMap(null);\r\n        });\r\n    }\r\n\r\n    private bindEvents(directions: google.maps.DirectionsRenderer) {\r\n        directions.addListener('directions_changed', (e) => this.directions_changed.emit(e));\r\n    }\r\n\r\n    private getOptions(): google.maps.DirectionsRendererOptions {\r\n        return {\r\n            preserveViewport: this.preserveViewport,\r\n            suppressMarkers: true,\r\n            polylineOptions: {\r\n                strokeColor: this._routeColor\r\n            }\r\n        };\r\n    }\r\n}\r\n"]}