{"version":3,"file":"google-map-marker.js","sourceRoot":"","sources":["../../../src/directives/google-map-marker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by mjaric on 9/28/16.\r\n */\r\nimport {Directive, Input, Output, OnInit, OnDestroy, EventEmitter, forwardRef} from '@angular/core';\r\nimport {MapsManager} from '../services/maps-manager';\r\nimport {BaseGoogleMapComponent} from './base-google-map-component';\r\n\r\n\r\n@Directive({\r\n    selector: 'google-map-marker',\r\n    providers: [{provide: BaseGoogleMapComponent, useExisting: forwardRef(() => GoogleMapMakerDirective)}]\r\n})\r\nexport class GoogleMapMakerDirective extends BaseGoogleMapComponent<google.maps.Marker> implements OnInit, OnDestroy {\r\n\r\n    /*\r\n     * Outputs events\r\n     * **********************************************************\r\n     */\r\n\r\n    /**\r\n     * This event is fired when the marker icon was clicked.\r\n     */\r\n    @Output()\r\n    click: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n    /**\r\n     * This event is fired when the marker icon was double clicked.\r\n     */\r\n    @Output()\r\n    dblclick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n    /**\r\n     * This event is fired for a rightclick on the marker.\r\n     */\r\n    @Output()\r\n    rightclick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n    /**\r\n     * This event is fired when the marker position property changes.\r\n     */\r\n    @Output()\r\n    position_changed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    /**\r\n     * This event is fired when the marker icon property changes.\r\n     */\r\n    @Output()\r\n    icon_changed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    /**\r\n     * This event is fired when the marker title property changes.\r\n     */\r\n    @Output()\r\n    title_changed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    /**\r\n     * This event is fired when the marker visible property changes.\r\n     */\r\n    @Output()\r\n    visible_changed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n\r\n    /*\r\n     * Inputs options\r\n     * **********************************************************\r\n     */\r\n    /**\r\n     * Marker position\r\n     */\r\n    @Input()\r\n    set position(value: google.maps.LatLngLiteral | Coordinates | { latitude: number, longitude: number }) {\r\n        this.proxy.then(marker => {\r\n            let position = new google.maps.LatLng(\r\n                (<google.maps.LatLngLiteral>value).lat || (<Coordinates>value).latitude,\r\n                (<google.maps.LatLngLiteral>value).lng || (<Coordinates>value).longitude\r\n            );\r\n            marker.setPosition(position);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * If true, the marker receives mouse and touch events.\r\n     * Default value is true.\r\n     */\r\n    @Input()\r\n    set clickable(mode: boolean) {\r\n        this.proxy.then(marker => marker.setClickable(mode));\r\n    }\r\n\r\n    /**\r\n     * Icon for the foreground. If a string is provided,\r\n     * it is treated as though it were an Icon with the string as url.\r\n     */\r\n    @Input()\r\n    set icon(value: string | google.maps.Icon) {\r\n        this.proxy.then(marker => marker.setIcon(value));\r\n    }\r\n\r\n    /**\r\n     * The marker's opacity between 0.0 and 1.0.\r\n     */\r\n    @Input()\r\n    set opacity(value: number) {\r\n        this.proxy.then(marker => marker.setOpacity(value));\r\n    }\r\n\r\n    /**\r\n     * Rollover text\r\n     */\r\n    @Input()\r\n    set title(value: string) {\r\n        this.proxy.then(marker => marker.setTitle(value));\r\n    }\r\n\r\n    /**\r\n     * If true, the marker is visible\r\n     */\r\n    @Input()\r\n    set visible(mode: boolean) {\r\n        this.proxy.then(marker => marker.setVisible(mode));\r\n    }\r\n\r\n    /**\r\n     * Set marker zIndex for displayed on the map\r\n     */\r\n    @Input()\r\n    set zIndex(value: number) {\r\n        this.proxy.then(marker => marker.setZIndex(value));\r\n    }\r\n\r\n\r\n    @Input()\r\n    set animation(value: google.maps.Animation) {\r\n        this.proxy.then(marker => marker.setAnimation(<google.maps.Animation>value));\r\n    }\r\n\r\n    @Input('delay')\r\n    set setDelay(value: number) {\r\n        this.delay = value;\r\n    }\r\n\r\n    constructor(private _mapsManager: MapsManager) {\r\n        super();\r\n    }\r\n\r\n\r\n    /*\r\n     * Internal logic\r\n     * **********************************************************\r\n     */\r\n\r\n\r\n    ngOnInit(): void {\r\n        this._mapsManager.createMarker()\r\n            .then(marker => {\r\n                this.bindEvents(marker);\r\n                this.proxyResolver(marker);\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.proxy.then(marker => {\r\n            google.maps.event.clearInstanceListeners(marker);\r\n            marker.setMap(null);\r\n        });\r\n    }\r\n\r\n    private bindEvents(marker: google.maps.Marker) {\r\n        marker.addListener('click', e => this.click.emit(e));\r\n        marker.addListener('dblclick', e => this.dblclick.emit(e));\r\n        marker.addListener('rightclick', e => this.rightclick.emit(e));\r\n        marker.addListener('position_changed', e => this.position_changed.emit(e));\r\n        marker.addListener('title_changed', e => this.title_changed.emit(e));\r\n        marker.addListener('icon_changed', e => this.icon_changed.emit(e));\r\n        marker.addListener('visible_changed', e => this.visible_changed.emit(e));\r\n    }\r\n}\r\n"]}