/// <reference types="googlemaps" />
/**
 * Created by mjaric on 9/28/16.
 */
import { OnInit, OnDestroy, AfterContentInit, ElementRef, QueryList } from '@angular/core';
import { MapsManager } from '../services/maps-manager';
import { BaseGoogleMapComponent } from './base-google-map-component';
import { IOptionalSetMapMethod } from './optional-set-map-method.interface';
export declare class GoogleMapComponent implements OnDestroy, OnInit, AfterContentInit {
    private _name;
    private _elem;
    private _mapsManager;
    static counters: number;
    private _zoomControl;
    private _streetViewControl;
    private _scaleControl;
    private _rotateControl;
    private _mapTypeControl;
    private _disableDefaultUI;
    private _maxZoom;
    private _minZoom;
    private _zoom;
    private _scrollwheel;
    private _keyboardShortcuts;
    private _draggable;
    private _id;
    private _map;
    private _mapResolver;
    private _mapComponentsSubscriptions;
    private _backgroundColor;
    private _center;
    private _disableDoubleClickZoom;
    mapComponents: QueryList<BaseGoogleMapComponent<IOptionalSetMapMethod>>;
    /**
     * Should map auto resize bounds to current set of markers
     * @type {boolean} default is true
     */
    autoFitMarkers: boolean;
    constructor(_name: string, _elem: ElementRef, _mapsManager: MapsManager);
    getMap(): Promise<google.maps.Map>;
    /**
     * Color used for the background of the Map div.
     * This color will be visible when tiles have not yet loaded as the user pans.
     * Note: This option can only be set when the map is initialized.
     */
    backgroundColor: string;
    /**
     * The initial Map center. Required.
     */
    center: google.maps.LatLngLiteral | Coordinates | {
        latitude: number;
        longitude: number;
    };
    /**
     * Enables/disables zoom and center on double click. Enabled by default.
     */
    disableDoubleClickZoom: boolean;
    /**
     * If false, prevents the map from being dragged.
     * Dragging is enabled by default.
     */
    draggable: boolean;
    /**
     * If false, prevents the map from being controlled by the keyboard.
     * Keyboard shortcuts are enabled by default.
     */
    keyboardShortcuts: boolean;
    /**
     * If false, disables scrollwheel zooming on the map.
     * The scrollwheel is enabled by default.
     */
    scrollwheel: boolean;
    /**
     * Map zoom level.
     */
    zoom: number;
    /**
     * The maximum zoom level which will be displayed on the map.
     */
    minZoom: number;
    /**
     * The minimum zoom level which will be displayed on the map.
     */
    maxZoom: number;
    /**
     * Enables/disables all default UI.
     */
    disableDefaultUI: boolean;
    /**
     * Enabled/Disabled state of the Map type control.
     */
    mapTypeControl: boolean;
    /**
     * Enabled/Disabled state of the Rotate control.
     */
    rotateControl: boolean;
    /**
     * Enabled/Disabled state of the Scale control.
     */
    scaleControl: boolean;
    /**
     * Enabled/Disabled state of the Street View Pegman control.
     */
    streetViewControl: boolean;
    /**
     * Enabled/Disabled state of the Zoom control
     */
    zoomControl: boolean;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    toString(): string;
    private attachComponentsToMap();
    private getOptions();
    private resetMapBounds(bounds);
    fitBounds(bounds: google.maps.LatLngBounds): void;
}
