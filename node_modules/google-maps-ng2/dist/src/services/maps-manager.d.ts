/// <reference types="googlemaps" />
/**
 * Created by mjaric on 9/28/16.
 */
import { ElementRef } from '@angular/core';
import { LazyGoogleMapsApiLoader } from '../loaders/lazy-google-maps-api-loader';
import { LongLat } from './long-lat.type';
/**
 * Service responsible to execute arbitrary functions in specific google map context
 */
export declare class MapsManager {
    private loader;
    private _maps;
    private _browserLocationPromise;
    constructor(loader: LazyGoogleMapsApiLoader);
    onApiLoad(): Promise<void>;
    createMarker(options?: google.maps.MarkerOptions): Promise<google.maps.Marker>;
    createDirections(options?: google.maps.DirectionsRendererOptions): Promise<google.maps.DirectionsRenderer>;
    getDirections(origin: LongLat, destination: LongLat): Promise<google.maps.DirectionsResult>;
    createMap(el: HTMLElement, options?: google.maps.MapOptions): Promise<google.maps.Map>;
    getMap(name: string): Promise<google.maps.Map>;
    addMap(name: string, map: google.maps.Map): void;
    removeMap(name: string): boolean;
    createAutocomplete(input: ElementRef, options: google.maps.places.AutocompleteOptions): Promise<google.maps.places.Autocomplete>;
    getBrowserLocation(): Promise<Coordinates | {
        longitude: number;
        latitude: number;
    }>;
    calculateMapBounds(markers?: Array<Coordinates>): Promise<google.maps.LatLngBounds>;
}
