{"version":3,"file":"maps-manager.js","sourceRoot":"","sources":["../../../src/services/maps-manager.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Created by mjaric on 9/28/16.\r\n */\r\nimport { Injectable, ElementRef } from '@angular/core';\r\n// import {BaseGoogleMapsApiLoader} from '../loaders/base-google-maps-api-loader';\r\nimport { LazyGoogleMapsApiLoader } from '../loaders/lazy-google-maps-api-loader';\r\n\r\nimport { LongLat } from './long-lat.type';\r\n\r\nconst DefaultCoords: { latitude: number, longitude: number } = {\r\n    latitude: 40.730610,\r\n    longitude: -73.935242\r\n};\r\nconst DEFAULT_MAP_OPTIONS: google.maps.MapOptions = {\r\n    zoom: 10,\r\n    zoomControl: false,\r\n    mapTypeControl: false,\r\n    streetViewControl: false\r\n};\r\n\r\nfunction noop() {\r\n}\r\n/**\r\n * Service responsible to execute arbitrary functions in specific google map context\r\n */\r\n@Injectable()\r\nexport class MapsManager {\r\n\r\n    private _maps: Map<string, google.maps.Map> = new Map<string, google.maps.Map>();\r\n    private _browserLocationPromise: Promise<{ latitude: number, longitude: number }>;\r\n\r\n    constructor(private loader: LazyGoogleMapsApiLoader) {\r\n        // check browser location\r\n        this.getBrowserLocation()\r\n            .then(noop);\r\n        // preload map immediately\r\n        this.loader\r\n            .load()\r\n            .then(noop);\r\n    }\r\n\r\n    onApiLoad(): Promise<void> {\r\n        return this\r\n            .loader\r\n            .load();\r\n    }\r\n\r\n    createMarker(options?: google.maps.MarkerOptions): Promise<google.maps.Marker> {\r\n        return this\r\n            .loader\r\n            .load()\r\n            .then(() => new google.maps.Marker(options));\r\n    }\r\n\r\n    createDirections(options?: google.maps.DirectionsRendererOptions): Promise<google.maps.DirectionsRenderer> {\r\n        return this.loader\r\n            .load()\r\n            .then(() => {\r\n                return new google.maps.DirectionsRenderer(options);\r\n            });\r\n    }\r\n\r\n    getDirections(origin: LongLat,\r\n        destination: LongLat): Promise<google.maps.DirectionsResult> {\r\n        return this\r\n            .loader\r\n            .load()\r\n            .then(() => {\r\n                let svc = new google.maps.DirectionsService();\r\n                return new Promise<google.maps.DirectionsResult>((resolve, reject) => {\r\n                    let request = {\r\n                        origin: new google.maps.LatLng(\r\n                            (<google.maps.LatLngLiteral>origin).lat || (<Coordinates>origin).latitude,\r\n                            (<google.maps.LatLngLiteral>origin).lng || (<Coordinates>origin).longitude\r\n                        ),\r\n                        destination: new google.maps.LatLng(\r\n                            (<google.maps.LatLngLiteral>destination).lat || (<Coordinates>destination).latitude,\r\n                            (<google.maps.LatLngLiteral>destination).lng || (<Coordinates>destination).longitude\r\n                        ),\r\n                        travelMode: google.maps.TravelMode.DRIVING\r\n                    };\r\n                    svc.route(request, (result: google.maps.DirectionsResult, status: google.maps.DirectionsStatus) => {\r\n                        if (status === google.maps.DirectionsStatus.OK) {\r\n                            resolve(result);\r\n                        } else {\r\n                            console.error({ message: 'fail to get directions', status, result });\r\n                            reject({ status, result });\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n    }\r\n\r\n    createMap(el: HTMLElement, options?: google.maps.MapOptions): Promise<google.maps.Map> {\r\n        return this.loader\r\n            .load()\r\n            .then(() => {\r\n                return this.getBrowserLocation()\r\n                    .then((coords: Coordinates) => {\r\n                        options = Object.assign({}, options, DEFAULT_MAP_OPTIONS, {\r\n                            center: new google.maps.LatLng(coords.latitude, coords.longitude),\r\n                            zoom: 8\r\n                        });\r\n                        return new google.maps.Map(el, options);\r\n                    });\r\n\r\n            });\r\n    }\r\n\r\n    getMap(name: string): Promise<google.maps.Map> {\r\n        return this.loader\r\n            .load()\r\n            .then(() => <google.maps.Map>this._maps.get(name));\r\n    }\r\n\r\n    addMap(name: string, map: google.maps.Map): void {\r\n        this._maps.set(name, map);\r\n    }\r\n\r\n    removeMap(name: string): boolean {\r\n        return this._maps.delete(name);\r\n    }\r\n\r\n    createAutocomplete(input: ElementRef,\r\n        options: google.maps.places.AutocompleteOptions): Promise<google.maps.places.Autocomplete> {\r\n        return this.loader.load().then(() => {\r\n            return new google.maps.places.Autocomplete(input.nativeElement, options);\r\n        });\r\n    }\r\n\r\n    getBrowserLocation(): Promise<Coordinates | { longitude: number, latitude: number }> {\r\n        if (this._browserLocationPromise) {\r\n            return (this._browserLocationPromise);\r\n        }\r\n\r\n        return this._browserLocationPromise = new Promise<{ latitude: number, longitude: number }>((resolve) => {\r\n            if (location.protocol === 'https' && navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    (success: { coords: Coordinates, timestamp: number }) => {\r\n                        resolve(success.coords);\r\n                    }, (error) => {\r\n                        console.error(error);\r\n                        if (error.code !== PositionError.PERMISSION_DENIED) {\r\n                            console.warn(`Permission is accepted but error encounter with message: ${error.message}`);\r\n                        }\r\n                        // if user didn't answer return default\r\n                        resolve(DefaultCoords);\r\n                    });\r\n            } else {\r\n                // if browser do not support location API return default (NYC)\r\n                resolve(DefaultCoords);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    calculateMapBounds(markers: Array<Coordinates> = []) {\r\n        return this.loader.load().then(() => {\r\n            return new Promise<google.maps.LatLngBounds>((resolve, reject) => {\r\n\r\n\r\n                if (markers && markers.length > 1) {\r\n                    let latLng = new google.maps.LatLng(markers[0].latitude, markers[0].longitude);\r\n                    let bounds: google.maps.LatLngBounds = new google.maps.LatLngBounds(latLng);\r\n                    for (let i = 1; i < markers.length; i++) {\r\n                        let marker = markers[i];\r\n                        bounds.extend(new google.maps.LatLng(marker.latitude, marker.longitude));\r\n                    }\r\n                    resolve(bounds);\r\n                    return;\r\n                }\r\n                reject({ error: 'There is no markers in markers array', centerTo: DefaultCoords });\r\n                return;\r\n\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}